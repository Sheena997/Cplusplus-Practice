/*
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序
列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例
如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对
应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。
（注意：这两个序列的长度是相等的）
链接https://www.nowcoder.com/practice/d77d11405cc7470d82554cb392585106?tpId=13&&tqId=11174&rp=1&ru=/activity/oj&qru=/ta/coding-interviews/question-ranking
*/
class Solution {
public:
    bool IsPopOrder(vector<int> pushV,vector<int> popV) {
        size_t pushi = 0;
        size_t popi = 0;
        stack<int> s;
        while(pushi < pushV.size())
        {
            s.push(pushV[pushi]);
            while(!s.empty() && popV[popi] == s.top())
            {
                s.pop(); 
                ++popi;
            }
            ++pushi;
        }
        if(s.empty())
            return true;
        else
            return false;
    }
};